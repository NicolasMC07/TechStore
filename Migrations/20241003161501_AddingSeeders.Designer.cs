// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TechStore.Data;

#nullable disable

namespace TechStore.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241003161501_AddingSeeders")]
    partial class AddingSeeders
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("TechStore.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Una variedad de laptops para diferentes necesidades.",
                            Name = "Laptops"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Los últimos smartphones del mercado.",
                            Name = "Smartphones"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Accesorios para mejorar tu experiencia tecnológica.",
                            Name = "Accesorios"
                        });
                });

            modelBuilder.Entity("TechStore.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.HasKey("Id");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Calle Falsa 123",
                            Email = "juan.perez@example.com",
                            Name = "Juan Pérez",
                            PhoneNumber = "123-456-7890"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Avenida Siempre Viva 742",
                            Email = "maria.lopez@example.com",
                            Name = "María López",
                            PhoneNumber = "987-654-3210"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Paseo del Río 456",
                            Email = "carlos.garcia@example.com",
                            Name = "Carlos García",
                            PhoneNumber = "555-123-4567"
                        });
                });

            modelBuilder.Entity("TechStore.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateOrder")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdClient")
                        .HasColumnType("int");

                    b.Property<int>("QuantityProduct")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateOrder = new DateTime(2024, 10, 3, 11, 15, 1, 660, DateTimeKind.Local).AddTicks(4301),
                            IdClient = 1,
                            QuantityProduct = 2,
                            Status = "Pendiente"
                        },
                        new
                        {
                            Id = 2,
                            DateOrder = new DateTime(2024, 10, 2, 11, 15, 1, 660, DateTimeKind.Local).AddTicks(4330),
                            IdClient = 2,
                            QuantityProduct = 1,
                            Status = "Completado"
                        },
                        new
                        {
                            Id = 3,
                            DateOrder = new DateTime(2024, 10, 1, 11, 15, 1, 660, DateTimeKind.Local).AddTicks(4336),
                            IdClient = 3,
                            QuantityProduct = 3,
                            Status = "Cancelado"
                        });
                });

            modelBuilder.Entity("TechStore.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<int>("IdCategory")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<double>("Price")
                        .HasColumnType("double");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Laptop potente para juegos y trabajo.",
                            IdCategory = 1,
                            Name = "Laptop XYZ",
                            Price = 999.99000000000001,
                            Quantity = 10
                        },
                        new
                        {
                            Id = 2,
                            Description = "Smartphone con cámara de alta calidad.",
                            IdCategory = 2,
                            Name = "Smartphone ABC",
                            Price = 599.99000000000001,
                            Quantity = 20
                        },
                        new
                        {
                            Id = 3,
                            Description = "Auriculares inalámbricos con cancelación de ruido.",
                            IdCategory = 3,
                            Name = "Auriculares Bluetooth",
                            Price = 89.989999999999995,
                            Quantity = 50
                        });
                });

            modelBuilder.Entity("TechStore.Models.ProductOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdOrder")
                        .HasColumnType("int");

                    b.Property<int>("IdProduct")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdOrder");

                    b.HasIndex("IdProduct");

                    b.ToTable("ProductOrders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IdOrder = 1,
                            IdProduct = 1
                        },
                        new
                        {
                            Id = 2,
                            IdOrder = 1,
                            IdProduct = 2
                        },
                        new
                        {
                            Id = 3,
                            IdOrder = 2,
                            IdProduct = 1
                        },
                        new
                        {
                            Id = 4,
                            IdOrder = 3,
                            IdProduct = 3
                        });
                });

            modelBuilder.Entity("TechStore.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Name = "User"
                        });
                });

            modelBuilder.Entity("TechStore.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdRole")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IdRole = 1,
                            Name = "admin",
                            Password = "admin123"
                        },
                        new
                        {
                            Id = 2,
                            IdRole = 2,
                            Name = "john_doe",
                            Password = "password"
                        },
                        new
                        {
                            Id = 3,
                            IdRole = 3,
                            Name = "guest_user",
                            Password = "guest"
                        });
                });

            modelBuilder.Entity("TechStore.Models.ProductOrder", b =>
                {
                    b.HasOne("TechStore.Models.Order", "Order")
                        .WithMany("ProductOrders")
                        .HasForeignKey("IdOrder")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TechStore.Models.Product", "Product")
                        .WithMany("ProductOrders")
                        .HasForeignKey("IdProduct")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("TechStore.Models.Order", b =>
                {
                    b.Navigation("ProductOrders");
                });

            modelBuilder.Entity("TechStore.Models.Product", b =>
                {
                    b.Navigation("ProductOrders");
                });
#pragma warning restore 612, 618
        }
    }
}
